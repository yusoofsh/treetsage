{
  "openapi": "3.0.3",
  "info": {
    "title": "Places API",
    "description": "Google Maps Places search API with location geocoding",
    "version": "1.0.0",
    "contact": {
      "name": "Places API Support"
    }
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Development server"
    }
  ],
  "paths": {
    "/health": {
      "get": {
        "summary": "Health check endpoint",
        "description": "Returns server health status",
        "responses": {
          "200": {
            "description": "Server is healthy",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "OK"
                }
              }
            }
          }
        }
      }
    },
    "/api/places/search": {
      "get": {
        "summary": "Search for places",
        "description": "Search for places using Google Maps Places API with optional location filtering",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "required": true,
            "description": "Search query (e.g., 'pizza', 'restaurant')",
            "schema": {
              "type": "string",
              "example": "pizza"
            }
          },
          {
            "name": "location",
            "in": "query",
            "required": false,
            "description": "Location as coordinates (lat,lng) or address",
            "schema": {
              "type": "string",
              "example": "40.7128,-74.0060"
            }
          },
          {
            "name": "radius",
            "in": "query",
            "required": false,
            "description": "Search radius in meters (default: 50000)",
            "schema": {
              "type": "string",
              "default": "50000",
              "example": "5000"
            }
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "description": "Place type filter (e.g., 'restaurant', 'store')",
            "schema": {
              "type": "string",
              "example": "restaurant"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful search results",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Place"
                      }
                    },
                    "status": {
                      "type": "string",
                      "example": "OK"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Missing required query parameter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Google Places API error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            }
          }
        }
      }
    },
    "/api/places/details": {
      "get": {
        "summary": "Get place details",
        "description": "Get detailed information about a specific place",
        "parameters": [
          {
            "name": "place_id",
            "in": "query",
            "required": true,
            "description": "Google Places place ID",
            "schema": {
              "type": "string",
              "example": "ChIJN1t_tDeuEmsRUsoyG83frY4"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Place details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlaceDetails"
                }
              }
            }
          },
          "400": {
            "description": "Missing place_id parameter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Google Places API error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Place": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Google Places place ID"
          },
          "name": {
            "type": "string",
            "description": "Place name"
          },
          "address": {
            "type": "string",
            "description": "Formatted address"
          },
          "rating": {
            "type": "number",
            "description": "Place rating (1-5)"
          },
          "priceLevel": {
            "type": "integer",
            "description": "Price level (0-4)"
          },
          "types": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Place types"
          },
          "location": {
            "type": "object",
            "properties": {
              "lat": {
                "type": "number"
              },
              "lng": {
                "type": "number"
              }
            }
          },
          "photoReference": {
            "type": "string",
            "description": "Photo reference for Google Places Photo API"
          },
          "openNow": {
            "type": "boolean",
            "description": "Whether the place is currently open"
          },
          "mapLink": {
            "type": "string",
            "description": "Google Maps search URL"
          },
          "embedUrl": {
            "type": "string",
            "description": "Google Maps embed URL"
          }
        }
      },
      "PlaceDetails": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "formatted_address": {
            "type": "string"
          },
          "formatted_phone_number": {
            "type": "string"
          },
          "website": {
            "type": "string"
          },
          "rating": {
            "type": "number"
          },
          "reviews": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "opening_hours": {
            "type": "object"
          },
          "photos": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "geometry": {
            "type": "object",
            "properties": {
              "location": {
                "type": "object",
                "properties": {
                  "lat": {
                    "type": "number"
                  },
                  "lng": {
                    "type": "number"
                  }
                }
              }
            }
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "example": "Query parameter is required"
          }
        }
      },
      "APIError": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "example": "Google Places API error"
          },
          "status": {
            "type": "string",
            "example": "REQUEST_DENIED"
          },
          "message": {
            "type": "string",
            "example": "API key invalid"
          }
        }
      }
    }
  }
}
